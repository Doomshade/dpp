pp -> a = 0;

FUNc main() -> pp {
    pp -> a = 0;
    pp -> b = 0;
    pp -> c = 0;
    pp -> d = 0;
    pp -> e = 0;
    pp -> f = 0;
    bye fibonacci(10) + fibonacci_rec(10);
}

FUNc fibonacci_rec(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci(pp -> num) -> pp {
    b = 1000;
    pp -> c;
    {
        pp -> a = 0;
        pp -> b = 1;
        c = 1;
        for(i = 1 to num) {
            c = add(a,b);
            a = b;
            b = c;
        }}
    bye c;
}

FUNc add(pp -> a, pp -> b) -> pp {
    bye trust_add(a, b);
}

FUNc trust_add(pp -> a, pp -> b) -> pp {
    bye a + b;
}
pp -> b = 0;
