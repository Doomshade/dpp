pp -> a = 0;
pp -> b = 0;

FUNc fibonacci_rec(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci(pp -> num) -> pp {
    # TODO: This should throw an error, but it instead assigns to the local variable b
    pp -> a = 0; #                                                               |
    pp -> b = 1; # HERE <---------------------------------------------------------
    pp -> c = 1;
    for(i = 1 to num) {
        c = add(a,b);
        a = b;
        b = c;
    }
    bye c;
}

FUNc add(pp -> a, pp -> b) -> pp {
    bye trust_add(a, b);
}

FUNc trust_add(pp -> a, pp -> b) -> pp {
    bye a + b;
}

FUNc main() -> pp {
    pp -> a = 0;
    pp -> b = 0;
    pp -> c = 0;
    pp -> d = 0;
    pp -> e = 0;
    pp -> f = 0;
    bye fibonacci(10) + fibonacci_rec(10);
}
