struct TEST {
    pp -> a,
    pp -> b,
    pp -> c,
}

booba -> ok = yem && yem && yem && yem && yem && yem;

FUNc fibonacci_rec(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci(pp -> num) -> pp {
    # struct TEST -> ok = TEST {
    #     a = 69,
    #     b = 420,
    #     c = 6969,
    # };
    # ok.a = 6969;
    # ok.b = 420420;
    # ok.c = 69696969;

    {
        pp -> aa = 0;
        pp -> ok = 0;
    }
    pp -> aa = 0;
    pp -> a = 0;
    ok = nom;
    pp -> b = 1;
    pp -> c = 1;
    for(i = 1 to num) {
        c = a + b;
        a = b;
        b = c;
        i += 1;
        i -= 1;
    }
    bye c;
}

FUNc main() -> pp {
    pp -> asd = 5 + 69 * 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;
    bye fibonacci(10) + fibonacci_rec(10);
}

FUNc fibonacci_rec2(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci2(pp -> num) -> pp {
    pp -> a = 0;
    pp -> b = 1;
    pp -> c = 1;
    for(i = 1 to num) {
        c = a + b;
        a = b;
        b = c;
    }
    bye c;
}

FUNc main2() -> pp {
    bye fibonacci2(10);
}


FUNc fibonacci_rec3(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci3(pp -> num) -> pp {
    pp -> a = 0;
    pp -> b = 1;
    pp -> c = 1;
    for(i = 1 to num) {
        c = a + b;
        a = b;
        b = c;
    }
    bye c;
}

FUNc main3() -> pp {
    bye fibonacci3(10);
}


FUNc fibonacci_rec4(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci4(pp -> num) -> pp {
    pp -> a = 0;
    pp -> b = 1;
    pp -> c = 1;
    for(i = 1 to num) {
        c = a + b;
        a = b;
        b = c;
    }
    bye c;
}

FUNc main4() -> pp {
    bye fibonacci3(10);
}


FUNc fibonacci_rec5(pp -> num) -> pp {
    if (num < 2) {
        bye num;
    }
    bye fibonacci_rec(num - 1) + fibonacci_rec(num - 2);
}

FUNc fibonacci5(pp -> num) -> pp {
    pp -> a = 0;
    pp -> b = 1;
    pp -> c = 1;
    for(i = 1 to num) {
        c = a + b;
        a = b;
        b = c;
    }
    bye c;
}

FUNc main5() -> pp {
    if (yem && yem && yem) {
        pp -> haha = 0 + 4 + 3 + 0 + 0 + 0+0 + 0 + 0 + 0 + 0;
        pp -> hahaa = 0 + 4 + 3 + 0 + 0 + 0;
        pp -> hahaaa = 0 + 4 + 3;
        booba -> mhm = 45678 > 6;
    }
    switch(69){
        case 5 {
            pp -> KEK = 123456798;
        },
        case 5 {
            pp -> KEK = 123456798;
        },
        case 5 {
            pp -> KEK = 123456798;
        },
        case 5 {
            pp -> KEK = 123456798;
        },
        case 5 {
            pp -> KEK = 123456798;
        }
    }
    if (nom) {
        pp -> adjdsaf = 0;
    }
    if (yem) {}
    if (yem) {}
    if (yem) {}
    if (yem) {}
    if (yem) {}
    if (yem) {}
    if (yem) {}
    if (yem) {}
    if (yem) {}
    bye fibonacci3(10);
}
